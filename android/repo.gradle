apply plugin:'maven'
apply plugin:'maven-publish'

repositories{
	maven {url rootProject.ext.maven.urlDev}
	maven {url rootProject.ext.maven.urlRelease}
	jcenter()
	mavenLocal()
}

if (!project.getRootProject().hasProperty("aarMap")) {
	project.getRootProject().ext.set("aarMap", new HashSet<String>())
}


publishing {
	publications {
		maven(MavenPublication) {
			if (components.hasWithName("java")) {
				from components.java
			} else if (components.hasWithName("android")) {
				from components.android
			} else {
				artifact "${project.buildDir}/outputs/aar/${project.name}-debug.aar"
				pom.withXml {
					def dependenciesNode = asNode().appendNode('dependencies')
					configurations.api.allDependencies.each {
						if (it.group != null && !it.group.contains("com.csair.mbp") && (it.name != null || "unspecified".equals(it.name)) && it.version != null) {
							def dependencyNode = dependenciesNode.appendNode('dependency')
							dependencyNode.appendNode('groupId', it.group)
							dependencyNode.appendNode('artifactId', it.name)
							dependencyNode.appendNode('version', it.version)
							if (it.group == groupId && project.getRootProject().aarMap.contains(it.name)) {
								dependencyNode.appendNode('type', 'aar')
							}
							//	providedCompiles.add(it.group + "." + it.name)
						}
					}

//					configurations.api.allDependencies.each {
//						if (it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null) {
//							def dependencyNode = dependenciesNode.appendNode('dependency')
//							dependencyNode.appendNode('groupId', it.group)
//							dependencyNode.appendNode('artifactId', it.name)
//							dependencyNode.appendNode('version', it.version)
//							if (it.group == groupId && project.getRootProject().aarMap.contains(it.name)) {
//								dependencyNode.appendNode('type', 'aar')
//							}
//							//	providedCompiles.add(it.group + "." + it.name)
//						}
//					}


				}
			}

		}
	}
	repositories{
		maven{
			println("project name:"+"${project.name}")
			println("project version:"+"${project.version}")
			println("project group:"+"${project.group}")
			if(!"${project.version}".contains("SNAPSHOT")){
				url rootProject.ext.maven.urlRelease
			}else{
				url rootProject.ext.maven.urlDev
			}
			credentials{
				username	=	rootProject.ext.maven.username
				password	=	rootProject.ext.maven.password
			}
		}
	}
}

